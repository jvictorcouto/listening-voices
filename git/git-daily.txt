Well, now i'll show how we suposed to do in a normal day, syncing our local repository with github server repository.


    Starting the day, getting updates

Check current branch
    git branch

Change branch if necessary
    git checkout branch-name

Update local repository
    git pull origin branch-name

Finishing the merge: 
    git add .
    git commit



    Undo updates

If you don't commit yet
    git merge --abort

Undo committed merge
    git reset --hard HEAD~1
                                --hard discards all non committed changes, be careful

Undo non committed changes
    git checkout -- .

Remove index changes
    git reset



    Uploading changes

Add all changes to index
    git add .

Adding new files
    git add file-name

Committing all changes 
    git commit -m "Commit message"

Or we just can do add and commit with
    git commit -a -m "Commit message"

Sending changes to server
    git push origin branch-name

If you are in the branch that is tracking the remote branch
    git push

Maybe change the server can be necessary
    git remote add new-origin https://newgitserver.url


	Dealing with branchs
	
	Branchs are timelines, with branchs we can do changes, test everything safely
	
See current branch
	git status
	
See current and all branchs
	git branch
	
Create new branch
	git branch branch-name
	
Change branch
	git checkout branch-name
	
Delete branchs without pending commits
	git branch -d branch-name
	
Force branch delete
	git branch -D branch-name

To add the contents of a branch to the current branch, it only work this way
	git branch -> check current branch
	git checkout branch-name -> go to current will receive changes
	git merge branch-name -> to merge the entered branch into the current branch